// Objective-C API for talking to github.com/prashanthbabu07/hookzcrypto/crypto Go package.
//   gobind -lang=objc github.com/prashanthbabu07/hookzcrypto/crypto
//
// File is generated by gobind. Do not edit.

#ifndef __Crypto_H__
#define __Crypto_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@class CryptoIdentityKeyPair;
@class CryptoKeyAgreementKeyPair;
@class CryptoKeyAgreementPrivateKey;
@class CryptoKeyAgreementPublicKey;
@class CryptoSealedMessage;
@class CryptoSigningKeyPair;
@class CryptoSigningPrivateKey;
@class CryptoSigningPublicKey;

/**
 * IdentityKeyPair is a pair of signign and key agreement
 */
@interface CryptoIdentityKeyPair : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * NewIdentityKeyPair create a new identity key pair for signing and key agreement
 */
- (nullable instancetype)init;
@property (nonatomic) CryptoSigningKeyPair* _Nullable signing;
@property (nonatomic) CryptoKeyAgreementKeyPair* _Nullable keyAgreement;
@end

/**
 * KeyAgreementKeyPair is a pair of private and public key agreement keys
 */
@interface CryptoKeyAgreementKeyPair : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * NewKeyAgreementKeyPair creates new ECKeyPair
 */
- (nullable instancetype)init;
@property (nonatomic) CryptoKeyAgreementPrivateKey* _Nullable privateKey;
@property (nonatomic) CryptoKeyAgreementPublicKey* _Nullable publicKey;
@end

/**
 * KeyAgreementPrivateKey represents a 256 bit Curve25519 private key for key exchange (KX).
 */
@interface CryptoKeyAgreementPrivateKey : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * NewKeyAgreementPrivateKeyFrom initializes a private key with the given value
 */
- (nullable instancetype)initFrom:(NSData* _Nullable)b;
/**
 * NewKeyAgreementPrivateKeyFromBase64String init's a private key from base64 string
 */
- (nullable instancetype)initFromBase64String:(NSString* _Nullable)value;
/**
 * Key returns the value of the private key.
 */
- (NSData* _Nullable)key;
/**
 * SharedSecretFrom computes a shared secret with the provided public key from another party.
 */
- (NSData* _Nullable)sharedSecretFrom:(CryptoKeyAgreementPublicKey* _Nullable)theirPublicKey;
/**
 * ToBase64String returns base64 string.
 */
- (NSString* _Nonnull)toBase64String;
@end

/**
 * KeyAgreementPublicKey represents a 256 bit Curve25519 public key for key exchange (KX)
 */
@interface CryptoKeyAgreementPublicKey : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * NewKeyAgreementPublicKeyFrom initializes a public key with the given value
 */
- (nullable instancetype)initFrom:(NSData* _Nullable)b;
/**
 * NewKeyAgreementPublicKeyFromBase64String initilizes a public key from base64 string
 */
- (nullable instancetype)initFromBase64String:(NSString* _Nullable)value;
/**
 * Key returns the value of the public key.
 */
- (NSData* _Nullable)key;
/**
 * ToBase64String returns base64 string.
 */
- (NSString* _Nonnull)toBase64String;
@end

/**
 * SealedMessage contain sealed info
 */
@interface CryptoSealedMessage : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) CryptoKeyAgreementPublicKey* _Nullable ephemeralPublicKey;
@property (nonatomic) NSData* _Nullable signature;
@property (nonatomic) NSData* _Nullable cipher;
@end

/**
 * SigningKeyPair is a pair of private and public signing keys
 */
@interface CryptoSigningKeyPair : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * NewSigningKeyPair creates new signing key pair
 */
- (nullable instancetype)init;
@property (nonatomic) CryptoSigningPrivateKey* _Nullable privateKey;
@property (nonatomic) CryptoSigningPublicKey* _Nullable publicKey;
@end

/**
 * SigningPrivateKey represents signing private key
 */
@interface CryptoSigningPrivateKey : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * NewSigningPrivateKeyFrom initializes a private key with given value
 */
- (nullable instancetype)initFrom:(NSData* _Nullable)b;
/**
 * Key returns the value of signing private key
 */
- (NSData* _Nullable)key;
/**
 * Sign returns signature using Ed25519
 */
- (NSData* _Nullable)sign:(NSData* _Nullable)message;
/**
 * ToBase64String returns base64 string.
 */
- (NSString* _Nonnull)toBase64String;
@end

/**
 * SigningPublicKey represents signing public key for verification
 */
@interface CryptoSigningPublicKey : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * NewSigningPublicKeyFrom initializes a public key with the given value
 */
- (nullable instancetype)initFrom:(NSData* _Nullable)b;
/**
 * IsValidSignature checks if the message has valid signature using Ed25519
 */
- (BOOL)isValidSignature:(NSData* _Nullable)signature message:(NSData* _Nullable)message;
/**
 * Key returns value of signing public key
 */
- (NSData* _Nullable)key;
/**
 * ToBase64String returns base64 string.
 */
- (NSString* _Nonnull)toBase64String;
@end

/**
 * Const byte sizes for key, signature
 */
FOUNDATION_EXPORT const int64_t CryptoKeyAgreementSize;
/**
 * Const byte sizes for key, signature
 */
FOUNDATION_EXPORT const int64_t CryptoRandomLimit;

/**
 * Decrypt data
 */
FOUNDATION_EXPORT NSData* _Nullable CryptoDecrypt(CryptoSealedMessage* _Nullable sealedMessage, CryptoKeyAgreementKeyPair* _Nullable ourEncryptionKey, CryptoSigningPublicKey* _Nullable theirSigningKey, NSError* _Nullable* _Nullable error);

/**
 * Encrypt data
 */
FOUNDATION_EXPORT CryptoSealedMessage* _Nullable CryptoEncrypt(NSData* _Nullable data, CryptoKeyAgreementPublicKey* _Nullable theirPublicKey, CryptoSigningKeyPair* _Nullable ourSigningKey, NSError* _Nullable* _Nullable error);

// skipped function HKDF with unsupported parameter or return types


/**
 * NewIdentityKeyPair create a new identity key pair for signing and key agreement
 */
FOUNDATION_EXPORT CryptoIdentityKeyPair* _Nullable CryptoNewIdentityKeyPair(void);

/**
 * NewKeyAgreementKeyPair creates new ECKeyPair
 */
FOUNDATION_EXPORT CryptoKeyAgreementKeyPair* _Nullable CryptoNewKeyAgreementKeyPair(void);

/**
 * NewKeyAgreementPrivateKeyFrom initializes a private key with the given value
 */
FOUNDATION_EXPORT CryptoKeyAgreementPrivateKey* _Nullable CryptoNewKeyAgreementPrivateKeyFrom(NSData* _Nullable b);

/**
 * NewKeyAgreementPrivateKeyFromBase64String init's a private key from base64 string
 */
FOUNDATION_EXPORT CryptoKeyAgreementPrivateKey* _Nullable CryptoNewKeyAgreementPrivateKeyFromBase64String(NSString* _Nullable value, NSError* _Nullable* _Nullable error);

/**
 * NewKeyAgreementPublicKeyFrom initializes a public key with the given value
 */
FOUNDATION_EXPORT CryptoKeyAgreementPublicKey* _Nullable CryptoNewKeyAgreementPublicKeyFrom(NSData* _Nullable b);

/**
 * NewKeyAgreementPublicKeyFromBase64String initilizes a public key from base64 string
 */
FOUNDATION_EXPORT CryptoKeyAgreementPublicKey* _Nullable CryptoNewKeyAgreementPublicKeyFromBase64String(NSString* _Nullable value, NSError* _Nullable* _Nullable error);

/**
 * NewSigningKeyPair creates new signing key pair
 */
FOUNDATION_EXPORT CryptoSigningKeyPair* _Nullable CryptoNewSigningKeyPair(void);

/**
 * NewSigningPrivateKeyFrom initializes a private key with given value
 */
FOUNDATION_EXPORT CryptoSigningPrivateKey* _Nullable CryptoNewSigningPrivateKeyFrom(NSData* _Nullable b);

/**
 * NewSigningPublicKeyFrom initializes a public key with the given value
 */
FOUNDATION_EXPORT CryptoSigningPublicKey* _Nullable CryptoNewSigningPublicKeyFrom(NSData* _Nullable b);

#endif
